---
format: 
  html:
    page-layout: custom
---

```{js, echo=FALSE}
var search = new URLSearchParams(window.location.search);

document.addEventListener('DOMContentLoaded', function() {
    var inputElement = document.querySelector("#DataTables_Table_0_filter input[type='search']");
    
    if(inputElement) {
        inputElement.value = search.get('query');
        inputElement.focus();
        inputElement.click();
        
        // Emulate mouse release (mouseup event)
            var mouseUpEvent = new MouseEvent('mouseup', {
                bubbles: true,
                cancelable: true,
                view: window
            });
            inputElement.dispatchEvent(mouseUpEvent);
    }
});
```

::: itembank
# Itembank Search

```{r, include=FALSE}
## Short functions for creating links per item that are used below in the table.
zip_link <- function(folder, name){
  tmp_link <- paste0('https://github.com/ShareStats/itembank/raw/packages/packages/',
                     'zip/', folder,'.zip')
}
tv_link <- function(folder, name){
  tmp_link <- paste0('https://github.com/ShareStats/itembank/raw/packages/packages/',
                     'tv/', folder,'-tv.zip')
}
qti_link <- function(folder, name){
  tmp_link <- paste0('https://github.com/ShareStats/itembank/raw/packages/packages/',
                     'qti/', folder,'-qti.zip')
}
html_link <- function(folder, name){
  tmp_link <- paste0('https://sharestats.github.io/itembank/', folder, '/', name, '1.html')
}
```

```{r, include = FALSE}
# Install and load necessary R packages
library(DT)
library(tidyverse)
```

```{r, include = FALSE}
# Create the columns containing the 'View' and 'Download' buttons

data <- read.csv("data/fulldf.csv") %>% 
  dplyr::select(-X, -id) %>% 
  
## Commented code for placing a collapsible column
## Showing the full item
#  mutate(
#    # Name-question column
#    Item = paste('<div class="accordion-item">
#    <h3 class="accordion-header" id="headingOne">
#      <button class="accordion-button" type="button" #data-bs-toggle="collapse" data-bs-target="#collapseOne" #aria-expanded="true" aria-controls="collapseOne">',
#    name,'
#      </button>
#    </h3>
#    <div id="collapseOne" class="accordion-collapse #collapse" aria-labelledby="headingOne" style="">
#      <div class="accordion-body">
#        <small>', question,'</small>
#      </div>
#    </div>
#  </div>'), .before = 1) %>% 
#  
  # Files button 
  mutate(View = paste(
    '<button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasExample" aria-controls="offcanvasExample">
  ‚Üó
</button>
<div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="offcanvasExampleLabel">',name,'</h5>
    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body">
    <iframe src="',html_link(folder, name),'" width="100%" height="100%"></iframe>
  </div>
</div>'
# '<a href="',html_link(folder, name),'">
#    <button type="button" class="btn btn-outline-light">‚Üó</button>
#  </a>'
    )) %>% 
  # Dropdown Files button
  mutate(Files = paste0(
    '<div class="dropdown mt-3">
      <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
        üìÅ
      </button>
      <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="">
        <li><a class="dropdown-item" href="',zip_link(folder, name),'">ZIP Folder</a></li>
        <li><a class="dropdown-item" href="',qti_link(folder, name),'">QTI</a></li>
        <li><a class="dropdown-item" href="',tv_link(folder, name),'">TestVision</a></li>
      </ul>
    </div>'
  )) %>% 
  
  mutate(`Item Name` = name, .before = 1)

  
#%>% 
  # checkbox (REMOVED-Commented)
#  mutate("‚úîÔ∏è"=paste('<fieldset class="form-group">
#      <div class="form-check">
#        <input class="form-check-input" type="checkbox" #value="" id="flexCheckDefault">
#        <label class="form-check-label" for#="flexCheckDefault">
#        </label>
#      </div>
#    </fieldset>'), .before = 1)

```

```{r, echo = FALSE, warning=FALSE, eval=TRUE}

# Create an interactive table using the DT package
data %>% dplyr::select(-name, -question, -folder) %>% 
datatable(., filter = "top", 
          options = list(pageLength = 10), 
          style = 'bootstrap', selection = 'multiple', 
          escape = FALSE)
```
:::
