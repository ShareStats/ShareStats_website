{
  "hash": "17d00d56065f29d64c778e4cdae527e8",
  "result": {
    "engine": "knitr",
    "markdown": "---\nauthor: Sharon Klinkenberg\npage-layout: article\ndate: now\n# image: \ntitle: How use the R exams package\ndescription: Instructions on how to use the R exams package to create exam question packages\n---\n\n## The R exams package\n\nThe R exams package is a powerful tool for creating and managing exam questions in R. It allows you to create questions in various formats, including HTML, PDF, and Canvas packages, which can be used in online learning platforms. The various learning and assessment platforms require slightly different versions of the QTI standard. R exams provides functions to create content for the specific requirements for these platforms, such as `exams2canvas`, `exams2testvision`, and `exams2ans`. But it also provides regular QTI packages that can be used in any platform that supports QTI, such as `exams2qti21`. The platform specific QTI packages can be uploaded to the platform directly.\n\nThe video and instructions below will guide you through the process of using the R exams package to create exam question packages that can be uploaded to platforms like Canvas or TestVision.\n\n## Instructional video\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/-KiNpUS-w1c?si=01TyWg8edR_dND7M\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n## Create content\n\nIn the ShareStats [itembank](https://www.sharestats.nl/items-df.html) it is possible to download the **ZIP Folder** with all the raw files for each question. When you unpack the zip you will have a folder containing the item `.Rmd` file, and data or image files.\n\nWe recommend to create a folder for your items and set this to your working directory and save the extracted ZIP folders in there. In this folder you can ad an R file with the code below to compile the items for uploading.\n\nFor compiling the items you can use the `exams2ans, exams2testvision, exams2canvas`, or any of the other `exams2...` functions from the exams package. It is also possible to compile items to word or PDF documents using the 'exams2word' or `exams2pdf` functions.  Make sure to first install the exams package to R if you do not have it installed already.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"exams\")\n```\n:::\n\n\nYou can use the script below to compile a question. Note that you can also download multiple questions and combine them to upload multiple questions at once to canvas.\n\n::: {.panel-tabset}\n## Single Question\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"exams\")\n\n# Add file path to list. Multiple paths can be added here list(\"path1.rmd\", \"path2.rmd\")\nfile.paths <- list(\"itemFolder1/itemFile1.rmd\")\n\n# Create preview\nexams2html(file.paths)\n\n# Set directory where you want to store the .zip package that will be created\ndirectory <- getwd()\n\n# Create Canvas package\nexams2canvas(file.paths, \n                 dir  = directory, \n                 name = \"exam_name\")\n```\n:::\n\n\n## Multiple Questions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"exams\")\n\n# Add file path to list. Multiple paths can be added here list(\"path1/file1.rmd\", \"path2/file2.rmd\")\nfile.paths <- list(\"itemFolder1/itemFile1.rmd\",\n                   \"itemFolder2/itemFile2.rmd\",\n                   \"itemFolder3/itemFile3.rmd\")\n\n# Create preview\nexams2html(file.paths)\n\n# Set directory where you want to store the .zip package that will be created\ndirectory <- getwd()\n\n# Create Canvas package\nexams2canvas(file.paths, \n                 dir  = directory, \n                 name = \"exam_name\")\n```\n:::\n\n\n:::\n\nThe newly created `.zip` file can be uploaded to Canvas as described in the video above.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}